let mapleader = " "

" General
set scrolloff=15
set incsearch
set ignorecase
set clipboard+=unnamed

"" General ideavim
set ideajoin
set idearefactormode=keep
sethandler <c-t> a:idea

"" Edit/Reload ideavim config
map \e :e ~/.ideavimrc <bar> :e ~/Documents/ideavim_config/.ideavimrc <CR>
map \r <Action>(IdeaVim.ReloadVimRc.reload)

" Window management

" Window modes
map <c-z> <Action>(ToggleDistractionFreeMode)

"" Window splits
map <c-\> <Action>(SplitVertically)
map <c--> <Action>(SplitHorizontally)
map <c-=> <Action>(Unsplit)
map <c-m> <Action>(MoveEditorToOppositeTabGroup)

""" Move easily between split windows
map <c-h> <c-w>h
map <c-l> <c-w>l
map <c-j> <c-w>j
map <c-k> <c-w>k

"" Closing tabs
map <leader>qc <Action>(CloseContent)
map <leader>qo <Action>(CloseAllEditorsButActive)
map <leader>ql <Action>(CloseAllToTheLeft)
map <leader>qr <Action>(CloseAllToTheRight)

"" Moving between tabs
map <TAB> <Action>(NextTab)
map <s-TAB> <Action>(PreviousTab)

" Editing

"" After moving block code leave the selection
vnoremap < <gv
vnoremap > >gv

" Refactoring
map <leader>r <Action>(Refactorings.QuickListPopupAction)

" Code navigation

map gc <Action>(GotoFile)
map gi <Action>(GotoImplementation)
map gd <Action>(GotoDeclaration)
map gb <Action>(Back)
map gf <Action>(Forward)

"" Go to errors
map ge <Action>(GotoNextError)
map gE <Action>(GotoPreviousError)

"" Go to functions
map [[ <Action>(MethodUp)
map ]] <Action>(MethodDown)

"" Collapsing regions
" map zc <Action>(CollapseRegion)
" map zo <Action>(ExpandRegion)
" map <leader>zc <Action>(CollapseAllRegions)
" map <leader>zo <Action>(ExpandAllRegions)

" Running and debugging
map ,r <Action>(ContextRun)
map ,d <Action>(ContextDebug)
map ,c <Action>(ChooseRunConfiguration)
map ,a <Action>(Rerun)
